#Template for whenever I refresh the main branch. and even need to re-add the submodules afterwards.

name: Update submodules!

on:
  workflow_dispatch:
    inputs:
      add_sub:
        description: "Add submodule, example: https://github.com/PoomSmart/YTABConfig.git"
        default: "https://github.com/PoomSmart/YTABConfig.git"
        required: false
        type: string
      add_dir_sub:
        description: "Dir submodule, example: Tweaks/YTABConfig"
        default: "Tweaks/YTABConfig"
        required: false
        type: string
      add_ref_sub:
        description: "Ref submodule, example: main, master"
        default: "main"
        required: false
        type: string
      add_sub_check:
        description: "Add sub check"
        default: false
        required: false
        type: boolean
      up2_sub:
        description: "Update2 submodule, example: Tweaks/YTABConfig"
        default: "Tweaks/YTABConfig"
        required: false
        type: string
      up2_sub_check:
        description: "Update2 sub check"
        default: false
        required: false
        type: boolean
      add_bundle:
        description: "Add bundle, example: YTABConfig.bundle"
        default: "YTABConfig.bundle"
        required: false
        type: string
      add_bundle_check:
        description: "Add bundle check"
        default: false
        required: false
        type: boolean
      up_sub_check:
        description: "Update all submodule check"
        default: false
        required: false
        type: boolean

jobs:
  update-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Set up Git
        run: |
           git config --global user.email "actions@github.com"
           git config --global user.name "GitHub Actions"

      - name: Add submodules
        if: ${{ inputs.add_sub_check }}
        run: |
          git submodule add -b ${{ inputs.add_ref_sub }} ${{ inputs.add_sub }} ${{ inputs.add_dir_sub }}
          git add .
          git commit -m "added submodules"
          git push origin

      - name: Update submodules
        if: ${{ inputs.up_sub_check }}
        run: |
          git submodule update --init --recursive --remote
          git add .
          git commit -m "updated submodules"
          git push origin
        continue-on-error: true

      - name: Update submodules
        if: ${{ inputs.up2_sub_check }}
        run: |
          git submodule update --init --recursive --remote ${{ inputs.up2_sub }}
          git add .
          git commit -m "updated submodules"
          git push origin
        continue-on-error: true

      - name: Make .bundle files
        if: ${{ inputs.add_bundle_check }}
        run: |
          cd ${{ inputs.add_dir_sub }}
          ln -s ../${{ inputs.add_dir_sub }}/layout/Library/Application\ Support/${{ inputs.add_bundle }} ${{ inputs.add_bundle }}
          git add .
          git commit -m "Added bundles"
          git push origin

      - name: Check exit code
        run: |
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Submodule update failed with exit code $exit_code"
            exit 1
          fi
